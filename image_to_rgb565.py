import sys
import time
import requests
import PIL.Image


BACKGROUND_COLOR = (150, 150, 150)  # rgb565 (uint16_t) => 0x94b2

headers = {
    "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:107.0) Gecko/20100101 Firefox/107.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
    "Accept-Language": "en-US,en;q=0.5",
    "Accept-Encoding": "gzip, deflate, br",
    "DNT": "1",
    "Connection": "keep-alive",
    "Upgrade-Insecure-Requests": "1",
    "Sec-Fetch-Dest": "document",
    "Sec-Fetch-Mode": "navigate",
    "Sec-Fetch-Site": "none",
    "Sec-Fetch-User": "?1",
}

print(f"/* Generated by image_to_rgb565.py\n *\n * {time.ctime()}\n *")
if sys.argv[1]:
    with open(sys.argv[1], encoding="utf-8") as fd:
        for line in fd:
            print(f" * {line}", end="")
print(" */\n")

for uri in sys.argv[2:]:
    if uri.lstrip().startswith('http'):
        file_name = uri.rsplit("/", 1)[-1]
        r = requests.get(uri, headers=headers, stream=True)
        with open(file_name, "wb") as fd:
            r.raw.decode_content = True
            for chunk in r:
                fd.write(chunk)
    else:
        file_name = uri

    img = PIL.Image.open(file_name)
    background = PIL.Image.new('RGBA', img.size, BACKGROUND_COLOR)
    alpha_composite = PIL.Image.alpha_composite(background, img)
    raw_rgb565 = []
    if uri == sys.argv[2]:
        print(f"const uint16_t images[][{img.width * img.height}] PROGMEM = {{")
    print(f"\t/*{file_name.rsplit('.', 1)[0]}*/ {{", end="")
    for y in range(img.height):
        for x in range(img.width):
            r, g, b, a = alpha_composite.getpixel((x, y))
            raw_rgb565.append(((r & 0xF8) << 8) | ((g & 0xFC) << 3) | ((b & 0xF8) >> 3))
            print(hex(raw_rgb565[-1]), end=",")
    print("},")
print("};")

print("\nsize_t images_map(String image_name) {\n"
      "\tSerial.println(\"image_name: \" + image_name);\n"
      )
for i, uri in enumerate(sys.argv[2:]):
    file_name = uri.rsplit("/", 1)[-1] if uri.lstrip().startswith('http') else uri
    print(f"\tif (image_name == \"{file_name.rsplit('.', 1)[0]}\") return {i};")
print("\treturn 0;\n}")
